% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.r, R/helper.r
\name{difference_sediment}
\alias{difference_sediment}
\alias{difference_fall_velocity}
\alias{difference_lat_struc_mass_div}
\alias{difference_long_cum_mass_change}
\alias{difference_long_cum_vol_change}
\alias{difference_long_cum_mass_moveable_limit}
\alias{difference_mass_bed_change}
\alias{difference_mass_bed_change_cum}
\alias{difference_mass_capacity}
\alias{difference_mass_cover}
\alias{difference_mass_in}
\alias{difference_mass_inactive}
\alias{difference_mass_in_cum}
\alias{difference_mass_out}
\alias{difference_mass_out_cum}
\alias{difference_mass_subsurface}
\alias{difference_reduce_armor_factor}
\title{Difference Table (Sediment)}
\usage{
difference_sediment(d1, d2, relative = FALSE, partial = FALSE,
  difference.col = "Difference", time.col = "Time",
  grain.col = "GrainClass")

difference_fall_velocity(d1, d2, relative = FALSE)

difference_lat_struc_mass_div(d1, d2, relative = FALSE)

difference_long_cum_mass_change(d1, d2, relative = FALSE)

difference_long_cum_vol_change(d1, d2, relative = FALSE)

difference_long_cum_mass_moveable_limit(d1, d2, relative = FALSE)

difference_mass_bed_change(d1, d2, relative = FALSE)

difference_mass_bed_change_cum(d1, d2, relative = FALSE)

difference_mass_capacity(d1, d2, relative = FALSE)

difference_mass_cover(d1, d2, relative = FALSE)

difference_mass_in(d1, d2, relative = FALSE)

difference_mass_inactive(d1, d2, relative = FALSE)

difference_mass_in_cum(d1, d2, relative = FALSE)

difference_mass_out(d1, d2, relative = FALSE)

difference_mass_out_cum(d1, d2, relative = FALSE)

difference_mass_subsurface(d1, d2, relative = FALSE)

difference_reduce_armor_factor(d1, d2, relative = FALSE)
}
\arguments{
\item{d1}{The first dataframe, considered the "base" result.}

\item{d2}{The second dataframe, considered the "new" result.}

\item{relative}{Logical: report differences as relative difference.}

\item{partial}{If TRUE, only the overlapping times and columns will 
be processed.}

\item{difference.col}{The name of the difference column to be created.}

\item{time.col}{The time column name.}

\item{grain.col}{the grain class column name.}
}
\value{
A dataframe in long table format, with difference defined as
 \code{d2- d1}. If \code{relative = TRUE}, the difference is defined
 as \code{(d2 - d1)/(0.5*(d2 + d1))}
}
\description{
Compute a difference table from sediment data.
}
\section{Functions}{
\itemize{
\item \code{difference_fall_velocity}: Compute a difference table for Fall Velocity data.

\item \code{difference_lat_struc_mass_div}: Compute a difference table for Lat Struc Mass Div data.

\item \code{difference_long_cum_mass_change}: Compute a difference table for Long. Cum Mass Change data.

\item \code{difference_long_cum_vol_change}: Compute a difference table for Long. Cum Vol Change data.

\item \code{difference_long_cum_mass_moveable_limit}: Compute a difference table for Long. Cum Mass Moveable Limit data.

\item \code{difference_mass_bed_change}: Compute a difference table for Mass Bed Change data.

\item \code{difference_mass_bed_change_cum}: Compute a difference table for Mass Bed Change Cum data.

\item \code{difference_mass_capacity}: Compute a difference table for Mass Capacity data.

\item \code{difference_mass_cover}: Compute a difference table for Mass Cover data.

\item \code{difference_mass_in}: Compute a difference table for Mass In data.

\item \code{difference_mass_inactive}: Compute a difference table for Mass Inactive data.

\item \code{difference_mass_in_cum}: Compute a difference table for Mass In Cum data.

\item \code{difference_mass_out}: Compute a difference table for Mass Out data.

\item \code{difference_mass_out_cum}: Compute a difference table for Mass Out Cum data.

\item \code{difference_mass_subsurface}: Compute a difference table for Mass Subsurface data.

\item \code{difference_reduce_armor_factor}: Compute a difference table for Reduce Armor Factor data.
}}

\examples{
simple.quasi = system.file("sample-data/SampleQuasiUnsteady.hdf",
  package = "RAStestR")
quasi.volincum = read_sediment(simple.quasi, "Vol In Cum")

difference_sediment(quasi.volincum, quasi.volincum)

quasi.double = operate_sediment(quasi.volincum , fun = function(x) 2*x)
difference_sediment(quasi.volincum, quasi.double)
difference_sediment(quasi.volincum, quasi.double, relative = TRUE)

}
